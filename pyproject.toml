[project]
name = "django_sso_auth"
description = "Django SSO Auth"
authors = [
    {name = "godd0t", email = "lirrishala@gmail.com"},
]
dependencies = [
    "django>=5.0",
    "djangorestframework>=3.14.0",
    "authlib>=1.3.0",
    "pyjwt>=2.8.0",
    "requests>=2.28.1",
]
requires-python = ">=3.10"
readme = "README.md"
license = {text = "MIT"}
dynamic = ["version"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "django_sso_auth/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["django_sso_auth"]

[tool.hatchling]
allow-direct-references = true


[tool.pdm]
distribution = true

[tool.pdm.scripts]

# Linting
ruff_lint = "ruff check django_sso_auth tests mock_project"
black_lint = "black --check django_sso_auth tests mock_project"
lint = {composite = ["ruff_lint", "black_lint"]}

# Formatting
ruff_format = "ruff check django_sso_auth tests mock_project --fix"
black_format = "black django_sso_auth tests mock_project"
format = {composite = ["ruff_format", "black_format"]}

# Testing
coverage_run = "coverage run -m pytest"
coverage_report = "coverage report -m --skip-covered"
test = {composite = ["coverage_run", "coverage_report"]}

[tool.pdm.dev-dependencies]
dev = [
    "pytest>=8.2.1",
    "pytest-django>=4.8.0",
    "ruff>=0.4.5",
    "black>=24.4.2",
    "pytest-sugar>=1.0.0",
    "coverage[toml]>=7.5.1",
    "faker>=26.0.0",
]

# TESTING
docs = [
    "mkdocs-material>=9.5.28",
    "mkdocstrings-python>=1.10.5",
    "markdown-include>=0.8.1",
    "mdx-include>=1.4.2",
    "pymdown-extensions>=10.8.1",
    "mkdocs-markdownextradata-plugin>=0.2.5",
]
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --force-sugar --no-migrations --reuse-db --log-cli-level=INFO"
testpaths = [
    "src/tests",
    "tests",
]
pythonpath = [".", "mock_project"]
python_files = "tests.py test_*.py *_tests.py"
DJANGO_SETTINGS_MODULE = "mock_project.conf.settings"

[tool.coverage.run]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/urls.py",
    "*/settings/*",
    "*/wsgi.py",
    "manage.py",
    "*__init__.py",
]
source = ["django_sso_auth"]

# LINTING
[tool.ruff]
output-format = "grouped"
src = ["src"]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "I001",  # Enable isort-like import sorting rule
]
ignore = ["E501"]

[tool.black]
line-length = 88
target-version = ['py311']
extend-exclude = '''
^(.*/)?migrations/.*$
'''
